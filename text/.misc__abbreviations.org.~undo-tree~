"18eed1d8dd1e5d102ce6e5c148315f8a8a0f70ac"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#2=[nil nil ((365 . 367) (#("e" 0 1 (wrap-prefix #1="" fontified t)) . -365) (undo-tree-id52 . -1) (undo-tree-id53 . 1) 366 (353 . 366) (#("Magnetic resonance imaging" 0 26 (wrap-prefix #1# fontified t)) . 353) (undo-tree-id54 . -25) (undo-tree-id55 . -25) (undo-tree-id56 . -25) (undo-tree-id57 . 26) (undo-tree-id58 . -26) (undo-tree-id59 . 26) (undo-tree-id60 . 26) (undo-tree-id61 . -25) (undo-tree-id62 . 19) (undo-tree-id63 . 26) (undo-tree-id64 . 9) (undo-tree-id65 . 19) (undo-tree-id66 . 1) (undo-tree-id67 . 9) 378) nil (22770 41296 228593 159000) 0 nil]) ((350 . 351) (#("P" 0 1 (wrap-prefix #1# fontified t)) . -350) (undo-tree-id68 . -1) (undo-tree-id69 . 1) 351 (348 . 351) (#("MRI" 0 3 (wrap-prefix #1# fontified t)) . 348) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . 3) (undo-tree-id74 . -3) (undo-tree-id75 . 3) (undo-tree-id76 . 3) (undo-tree-id77 . -2) (undo-tree-id78 . 1) (undo-tree-id79 . 3) 350) nil (22770 41296 228808 806000) 0 nil]) ((345 . 346) (#("p" 0 1 (wrap-prefix #1# fontified t)) . -345) (undo-tree-id80 . -1) (undo-tree-id81 . 1) 346 (343 . 346) (#("mri" 0 3 (wrap-prefix #1# fontified t)) . 343) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . 3) (undo-tree-id86 . -3) (undo-tree-id87 . 3) (undo-tree-id88 . 3) (undo-tree-id89 . -2) (undo-tree-id90 . 1) (undo-tree-id91 . 3) 345) nil (22770 41296 228876 32000) 0 nil]) ((#("
" 0 1 (wrap-prefix #1# fontified nil)) . -380) (undo-tree-id92 . -1) (330 . 381) 281 (t 22770 40395 11932 358000)) nil (22770 41296 228901 791000) 0 nil]) ((#(" " 0 1 (fontified t wrap-prefix #1#)) . 329) (undo-tree-id0 . 1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . 1)) nil (22770 40394 997395 370000) 0 nil]) ((#("M" 0 1 (wrap-prefix #1# fontified t)) . 303) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . 1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . 1) (undo-tree-id16 . 1)) nil (22770 40394 997420 606000) 0 nil]) ((304 . 331) 303) nil (22770 40394 997424 971000) 0 nil]) ((303 . 304) (#("Multilayer Perceptron" 0 21 (wrap-prefix #1# fontified t)) . 303) (undo-tree-id17 . -20) (undo-tree-id18 . -20) (undo-tree-id19 . -20) (undo-tree-id20 . 21) (undo-tree-id21 . -21) (undo-tree-id22 . 21) (undo-tree-id23 . 21) (undo-tree-id24 . -20) (undo-tree-id25 . 12) (undo-tree-id26 . 21) (undo-tree-id27 . 1) (undo-tree-id28 . 12) 323) nil (22770 40394 997472 141000) 0 nil]) ((298 . 301) (#("MLP" 0 3 (wrap-prefix #1# fontified t)) . 298) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . 3) (undo-tree-id33 . -3) (undo-tree-id34 . 3) (undo-tree-id35 . 3) (undo-tree-id36 . -2) (undo-tree-id37 . 1) (undo-tree-id38 . 3) 300) nil (22770 40394 997498 754000) 0 nil]) ((293 . 296) (#("w" 0 1 (wrap-prefix #1# fontified t)) . -293) (undo-tree-id39 . -1) (undo-tree-id40 . 1) 294 (293 . 294) (#("mlp" 0 3 (wrap-prefix #1# fontified t)) . 293) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . 3) (undo-tree-id44 . -2) (undo-tree-id45 . -3) (undo-tree-id46 . 3) (undo-tree-id47 . 3) (undo-tree-id48 . -2) (undo-tree-id49 . 1) (undo-tree-id50 . 3) 295) nil (22770 40394 997528 858000) 0 nil]) ((#("
" 0 1 (wrap-prefix #1# fontified nil)) . -325) (undo-tree-id51 . -1) (280 . 326) 236 (t 22752 8859 0 0)) nil (22770 40394 997543 345000) 0 nil]) nil nil (22770 40394 997545 474000) 0 nil] #2# 1147 11 nil]