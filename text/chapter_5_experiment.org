* Experiment
** Frameworks
   There is wide variety of options for machine learning frameworks in general and also for [[gls:cnn][CNN]] specifically. Namely there is a variety of tools that are centered around python programming language. All of the frameworks mentioned bellow have at least some support for GPGPU computation.

*** Caffe
   - Deep learning framework implemented in C++ programming language, that also supports python API.
   - It was difficult to find any good documentation and in terms of popularity it was not so prominent as some other frameworks in this list.

*** Keras
   - Kears is implemented in python and therefore integrates well with the massive Data Science ecosystem that Python is offering. It probably currently has one of the largest communities in deep learning. It has most monthly mentions in Arxiv database, in scientific papers dealing with deep learning.
   - Keras has very good documentation, many code examples and other resources that help users to get started very quickly.
   - It can run on top of both TensorFlow and Theano engines. Specifically in the case of TensorFlow this is very good news since it is developed by Google, which is dividing enormous amount of resources to make sure that it is one of the (or maybe even the one) fastest deep learning engines out there.
   - Keras is supported by CUDA (cuDNN) which is very important specifically for [[gls:cnn][CNN]] models with usage of GPU hardware.
*** MatConvNet
   - Matlab toolbox implementing CNNs for computer vision application.
   - It has the disadvantage of being part of proprietary software
   - Its community is not nearly as big as in case of Torch or Keras

*** Scikit learn
   - is also python framework that is very popular and offers wide variety of machine learning models but it is not so versatile and it is obvious that is more geared towards hobbyist then for scientific community.
   - The support for Deep Learning is not as wide as it is for example at Keras

*** Torch
   - Scientific computing framework with support of wide variety of machine learning algorithms.
   - Torch was one of the first universal and modular frameworks developed specifically for the needs of Deep learning. It was very prominent few years ago, but it seems that it lost some traction and is not as prevalent as it once was. One of the possible reasons for this might be that it is implemented in Lua programming language that is not nearly so popular as for example python.
** Design of experiment
   There are three standard benchmark datasets used when it comes [[gls:deep learning][deep learning]]. MNIST, CIFAR and ILSVRC.
Accuracy of several models on training data.

\begin{tikzpicture}
  \begin{axis}[
      title={Accuracy on training data},
      xlabel={epoch},
      ylabel={accuracy [\%]},
      ymin=0.7, ymax=1,
      legend pos=south east,
      ymajorgrids=true,
      xmajorgrids=true,
      grid style=dashed,
      scale=1.5,
  ]

  \addplot[color=blue]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_1_13422B12_adam_performance.log};
      \addlegendentry{Model 1}
  \addplot[color=red]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_2_13422B12_adam_performance.log};
      \addlegendentry{Model 2}
  \addplot[color=green]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_3_13422B12_adam_performance.log};
      \addlegendentry{Model 3}
  \addplot[color=brown]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_4_B536FE0E_adam_performance.log};
      \addlegendentry{Model 4}
  \addplot[color=yellow]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_5_F6309B1C_adam_performance.log};
      \addlegendentry{Model 5}
  \addplot[color=purple]
      table [x=epoch, y=acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_6_2CD19B7B_adam_performance.log};
      \addlegendentry{Model 6}

  \end{axis}
\end{tikzpicture}

Accuracy of several models on testing data.

\begin{tikzpicture}
  \begin{axis}[
      title={Accuracy on testing data},
      xlabel={epoch},
      ylabel={accuracy [\%]},
      ymin=0.7, ymax=0.9,
      legend pos=south east,
      ymajorgrids=true,
      xmajorgrids=true,
      grid style=dashed,
      scale=1.5,
  ]

  \addplot[color=blue]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_1_13422B12_adam_performance.log};
      \addlegendentry{Model 1}
  \addplot[color=red]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_2_13422B12_adam_performance.log};
      \addlegendentry{Model 2}
  \addplot[color=green]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_3_13422B12_adam_performance.log};
      \addlegendentry{Model 3}
  \addplot[color=brown]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_4_B536FE0E_adam_performance.log};
      \addlegendentry{Model 4}
  \addplot[color=yellow]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_5_F6309B1C_adam_performance.log};
      \addlegendentry{Model 5}
  \addplot[color=purple]
      table [x=epoch, y=val_acc, col sep=comma]
      {/home/derekin/Dropbox/trained_models/model_6_2CD19B7B_adam_performance.log};
      \addlegendentry{Model 6}

  \end{axis}
\end{tikzpicture}
*** Comparison of depth of classification portion
 \begin{tikzpicture}
   \begin{axis}[
       title={Accuracy on training data},
       xlabel={epoch},
       ylabel={accuracy [\%]},
       ymin=0.8, ymax=1,
       legend pos=south east,
       ymajorgrids=true,
       xmajorgrids=true,
       grid style=dashed,
       scale=1.5,
   ]

   \addplot[color=blue]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_1_adam_performance.log};
       \addlegendentry{Model 1}
   \addplot[color=red]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_2_adam_performance.log};
       \addlegendentry{Model 2}
   \addplot[color=green]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_3_adam_performance.log};
       \addlegendentry{Model 3}

   \end{axis}
 \end{tikzpicture}

 \begin{tikzpicture}
   \begin{axis}[
       title={Accuracy on testing data},
       xlabel={epoch},
       ylabel={accuracy [\%]},
       ymin=0.7, ymax=0.8,
       legend pos=south east,
       ymajorgrids=true,
       xmajorgrids=true,
       grid style=dashed,
       scale=1.5,
   ]

   \addplot[color=blue]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_1_adam_performance.log};
       \addlegendentry{Model 1}
   \addplot[color=red]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_2_adam_performance.log};
       \addlegendentry{Model 2}
   \addplot[color=green]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_3_adam_performance.log};
       \addlegendentry{Model 3}

   \end{axis}
 \end{tikzpicture}

*** Comparison models without dropout

 \begin{tikzpicture}
   \begin{axis}[
       title={Accuracy on training data},
       xlabel={epoch},
       ylabel={accuracy [\%]},
       ymin=0.8, ymax=1,
       legend pos=south east,
       ymajorgrids=true,
       xmajorgrids=true,
       grid style=dashed,
       scale=1.5,
   ]

   \addplot[color=blue]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_1_adam_performance.log};
       \addlegendentry{Model 1}
   \addplot[color=red]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_2_adam_performance.log};
       \addlegendentry{Model 2}
   \addplot[color=green]
       table [x=epoch, y=acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_3_adam_performance.log};
       \addlegendentry{Model 3}

   \end{axis}
 \end{tikzpicture}

 \begin{tikzpicture}
   \begin{axis}[
       title={Accuracy on testing data},
       xlabel={epoch},
       ylabel={accuracy [\%]},
       ymin=0.75, ymax=0.8,
       legend pos=south east,
       ymajorgrids=true,
       xmajorgrids=true,
       grid style=dashed,
       scale=1.5,
   ]

   \addplot[color=blue]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_1_adam_performance.log};
       \addlegendentry{Model 1}
   \addplot[color=red]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_2_adam_performance.log};
       \addlegendentry{Model 2}
   \addplot[color=green]
       table [x=epoch, y=val_acc, col sep=comma]
       {/home/derekin/Dropbox/trained_models/model_test_of_fully_connected_without_dropout_3_adam_performance.log};
       \addlegendentry{Model 3}

   \end{axis}
 \end{tikzpicture}
